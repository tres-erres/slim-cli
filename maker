#!/usr/bin/env php
<?php

/**
 * Copyright (C) 2019  Tres Erres
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
  
$args = $_SERVER['argv'];

require __DIR__.'/vendor/autoload.php';

echo "\e[1;33m      ___           ___           ___           ___           ___     \n\e[0m";
echo "\e[1;33m     /  /\\         /  /\\         /  /\\         /  /\\         /  /\\    \n\e[0m";
echo "\e[1;33m    /  /::|       /  /::\\       /  /:/        /  /::\\       /  /::\\   \n\e[0m";
echo "\e[1;33m   /  /:|:|      /  /:/\\:\\     /  /:/        /  /:/\\:\\     /  /:/\\:\\  \n\e[0m";
echo "\e[1;33m  /  /:/|:|__   /  /::\\ \\:\\   /  /::\\____   /  /::\\ \\:\\   /  /::\\ \\:\\ \n\e[0m";
echo "\e[1;33m /__/:/_|::::\\ /__/:/\\:\\_\\:\\ /__/:/\\:::::\\ /__/:/\\:\\ \\:\\ /__/:/\\:\\_\\:\\\n\e[0m";
echo "\e[1;33m \\__\\/  /~~/:/ \\__\\/  \\:\\/:/ \\__\\/~|:|~~~~ \\  \\:\\ \\:\\_\\/ \\__\\/~|::\\/:/\n\e[0m";
echo "\e[1;33m       /  /:/       \\__\\::/     |  |:|      \\  \\:\\ \\:\\      |  |:|::/ \n\e[0m";
echo "\e[1;33m      /  /:/        /  /:/      |  |:|       \\  \\:\\_\\/      |  |:|\\/  \n\e[0m";
echo "\e[1;33m     /__/:/        /__/:/       |__|:|        \\  \\:\\        |__|:|~   \n\e[0m";
echo "\e[1;33m     \\__\\/         \\__\\/         \\__\\|         \\__\\/         \\__\\|    \n\n\e[0m";
echo "v1.0                                    Copyright (C) 2019  Tres Erres\n\n";
echo "This program comes with ABSOLUTELY NO WARRANTY.\n";
echo "This is free software, and you are welcome to redistribute it\n";
echo "under certain conditions; type `php maker copyright' for details.\n\n";

if (file_exists(__DIR__.'/bootstrap/app.php')) {
	$app = require_once __DIR__.'/bootstrap/app.php';
}

if (empty($args[1])) {
	$args[1] = "ayuda";
}

$funcion = 'cmd' . ucfirst(strtolower($args[1]));
if (!function_exists($funcion)) {
	die("\n\n\e[1;31mEl comando '" . $args[1] . "' no existe.\e[0m\n\nEscriba 'php maker help' para ver un listado de los comandos disponibles.\n\n");
}

$funcion(array_slice($args, 2));

echo "\n\n";

/************************************
 *	A PARTIR DE ACA VAN FUNCIONES
 ***********************************/

function cmdAyuda($args) {
	echo "Listado de comandos:\n";
	$filterFn = function($item) {
		return strpos($item, 'cmd') !== false;
	};
	$funciones = array_filter(get_defined_functions()['user'], $filterFn);
	foreach ($funciones as $funcion) {
		echo "\n· " . str_replace("cmd", "", $funcion);
	}
}

function cmdCopyright($args) {
	echo "https://github.com/tres-erres/slim-cli/blob/master/LICENSE";
}

function cmdGenerar($args) {
	if (count($args) === 0) {
		$filterFn = function($item) {
			return substr($item, 0, 3) === 'gen';
		};
		$funciones = array_values(array_filter(get_defined_functions()['user'], $filterFn));
		if (count($funciones) > 0) {
			echo "Listado de generadores:\n";
			foreach ($funciones as $funcion) {
				echo "\n· " . str_replace("cmd", "", $funcion);
			}
			ask("Elección");
		} else {
			echo "No hay generadores.";
		}
		return;
	}
	switch ($args[0]) {
		case 'hojeador':
			$tabla = $args[1];
			$adodb = db();
			$attrTbl = $adodb->getAll('DESCRIBE '.$tabla);
			$ide = $adodb->getAll('SHOW INDEX FROM '.$tabla);
			$ide = $ide[0]['Column_name'];
			$atributos = array();
			$injAttrArr = array();
			$parAttrArr = array();
			$formAttrArr = array();
			$camposAttrArr = array();
			$hojeaAttrArr = array();
			$indice = 1;
			foreach ($attrTbl as $attr){ 
				$como = substr($attr['Type'],0,strpos($attr['Type'],"("));
				if (!strlen($como)) 
					$como=$attr['Type'];
				switch ($como) {
					case 'int': case 'decimal': case 'tinyint': case 'mediumint': case 'longint':
						$tipo="number";
						$elTipo="numero";
						$casteo = '.toString()';
						$tipo2="null";
						break;
					case 'date': case 'datetime': case 'varchar': case 'timestamp': case 'longtext': case 'longblob': case 'blob':
						$tipo="string";
						$elTipo="texto";
						$casteo = '';
						$tipo2="''";
						break;
					default:
						$tipo="string";
						$elTipo="texto";
						$casteo = '';
						$tipo2="''";
						break;
				}
				array_push($atributos,$attr['Field']);

				$elCampo = $attr['Field'];
				$linForm = "formData.append('".$attr['Field']."', this.".$attr['Field'].$casteo.");";
				$linInj = "this.".$attr['Field']." = data.".$attr['Field'].";";
				$linCampos = "\t\t\t<mat-card>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input trFocusNext=\"".$indice."\" matInput [(ngModel)]=\"".$elCampo."\" name=\"".$elCampo."\" placeholder=\"".$elCampo."\">\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t</mat-card>";
				$linHojea = "\t\t\t\t{ ancho: 10, def:\"".$attr['Field']."\", nombre:\"".$attr['Field']."\", tipo: \"".$elTipo."\"},";
				array_push($formAttrArr,$linForm);
				array_push($injAttrArr,$linInj);
				array_push($camposAttrArr,$linCampos);
				array_push($parAttrArr,$attr['Field'].':'.$tipo.';');
				array_push($hojeaAttrArr, $linHojea);
				$indice++;
			}
			$formAttr = implode("\n", $formAttrArr);
			$injAttr = implode("\n", $injAttrArr);
			$parAttr = implode("\n", $parAttrArr);
			$camposAttr = implode("\n", $camposAttrArr);
			$hojeaAttr = implode("\n", $hojeaAttrArr);
			$pathFront = ask("Path Front-End", "../frontend/src/app/layout/dashboard/$tabla");
			$pathBack = ask("Path Back-End", "./");
			$entidad = ask("Nombre de entidad", ucfirst($tabla));
			if (!file_exists($pathFront)) {mkdir($pathFront, 0777, true);}
			if (!file_exists($pathBack)) {mkdir($pathBack, 0777, true);}
			/* Front end */
			$copioModule = copy ('./templates/'.$args[0].'/componenteModule.txt' , $pathFront.'/'.$tabla.'.module.ts');
			$copioHtml = copy ('./templates/'.$args[0].'/componenteHtml.txt' , $pathFront.'/'.$tabla.'.component.html');
			$copioTs = copy ('./templates/'.$args[0].'/componenteTs.txt' , $pathFront.'/'.$tabla.'.component.ts');
			$copioScss = copy ('./templates/'.$args[0].'/componenteScss.txt' , $pathFront.'/'.$tabla.'.component.scss');
			$copioDialog = copy ('./templates/'.$args[0].'/componenteDialogo.txt' , $pathFront.'/dialogo-'.$tabla.'.html');
			$copioModuloRutas = copy ('./templates/'.$args[0].'/moduloRutas.txt' , $pathFront.'/'.$tabla.'-routing.module.ts');
			/* Back end */
			$copioClase = copy ('./templates/'.$args[0].'/clase.txt' , $pathBack.'/app/'.ucfirst($tabla).'.php');
			if ($copioModule && $copioHtml && $copioTs && $copioScss && $copioDialog && $copioClase && $copioModuloRutas){
				$filename=$pathFront.'/dialogo-'.$tabla.'.html';
				$string_to_replace="_min_";
				$replace_with=$tabla;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathFront.'/dialogo-'.$tabla.'.html';
				$string_to_replace="_campos_";
				$replace_with=$camposAttr;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathFront.'/'.$tabla.'.component.ts';
				$string_to_replace="_may_";
				$replace_with=$entidad;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathFront.'/'.$tabla.'.component.ts';
				$string_to_replace="_colusHoj_";
				$replace_with=$hojeaAttr;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathFront.'/'.$tabla.'.component.ts';
				$string_to_replace="_min_";
				$replace_with=$tabla;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathFront.'/'.$tabla.'.component.ts';
				$string_to_replace="_injectParams_";
				$replace_with=$injAttr;
				replace_string_in_file($filename, $string_to_replace, $replace_with);$filename=$pathFront.'/'.$tabla.'.component.ts';
				$string_to_replace="_params_";
				$replace_with=$parAttr;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathFront.'/'.$tabla.'.component.ts';
				$string_to_replace="_formDataParams_";
				$replace_with=$formAttr;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathFront.'/'.$tabla.'-routing.module.ts';
				$string_to_replace="_may_";
				$replace_with=$entidad;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathFront.'/'.$tabla.'-routing.module.ts';
				$string_to_replace="_min_";
				$replace_with=$tabla;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathFront.'/'.$tabla.'.module.ts';
				$string_to_replace="_may_";
				$replace_with=$entidad;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathFront.'/'.$tabla.'.module.ts';
				$string_to_replace="_min_";
				$replace_with=$tabla;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathFront.'/'.$tabla.'.component.scss';
				$string_to_replace="_min_";
				$replace_with=$tabla;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathBack.'/app/'.ucfirst($tabla).'.php';
				$string_to_replace="_min_";
				$replace_with=$tabla;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathBack.'/app/'.ucfirst($tabla).'.php';
				$string_to_replace="_may_";
				$replace_with=$entidad;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				$filename=$pathBack.'/app/'.ucfirst($tabla).'.php';
				$string_to_replace="_ide_";
				$replace_with=$ide;
				replace_string_in_file($filename, $string_to_replace, $replace_with);
				actualizoRutas($pathBack,$tabla);
				actualizoDependencias($pathBack,$tabla);
			} else {
				echo "No pude copiar el archivo... NO ES MI CULPA";
			}
			break;
		default:
			die("\e[1;31mNo existe el generador '" . $args[0] . "'.\e[0m\n\nEscriba 'php maker generar' para ver un listado de los generadores disponibles.\n\n");
			break;
	}
}

/*************
 *	HELPERS
 ************/

/**
 * Función que pregunta por entrada de texto.
 * Se puede pasar valor por defecto.
 * 
 * Para aceptar valor vacío, enviar '' como $default
 */
function ask($text, $default = null) {
	echo $text . ($default !== null && strlen($default) > 0 ? '[' . $default . ']' : '') . ': ';
	$res = rtrim(fgets(STDIN));
	if (strlen($res) === 0 && $default === null) {
		echo "\n\n\e[1;31mERROR: no existe valor por defecto. Ingrese un valor. \e[0m\n\n";
		$res = ask($text);
	}
	return (strlen($res) === 0 && $default !== null ? $default : $res);
}

/**
 * Función para conectar a la DB
 */
function db() {
	if (!empty($app)) {
		$adodb = $app->getContainer()['adodb'];
	} else {
		echo "\n\e[1;31mNo se encontró container de ADOdb. Configure la conexión.\e[0m\n\n";
		
		$server = ask("Servidor", "localhost");
		$user = ask("Usuario", "root");
		$pass = ask("Contraseña", "root");
		$db = ask("Base de datos");

		$adodb = ADONewConnection('mysqli');
		while ($adodb->connect($server,$user,$pass,$db) === false) {
			echo "\n\n\e[1;31mCredenciales incorrectas.\e[0m\n\n";
			$user = ask("Usuario", $user);
			$pass = ask("Contraseña", $pass);
		}
		$adodb->Execute("SET @@lc_time_names = 'es_AR';");
		$adodb->cacheSecs = 10;
		$adodb->debug = false; 
		$adodb->setFetchMode(ADODB_FETCH_ASSOC);
		$adodb->SetCharSet('utf8');
		$adodb->execute("SET NAMES 'utf8'");
		$adodb->Execute("SET @@lc_time_names = 'es_AR';");
		$adodb->Execute("SET collation_connection = 'utf8_general_ci'");
	}
	return $adodb;
}

/** Navegación interactiva, retorna directorio seleccionado */
function navegar($directorio = null) {
	if ($directorio === null) {
		if (strpos(getcwd(), 'vendor') !== false) {
			chdir('../..');
		}
	} else {
		chdir($directorio);
	}
	$directorios = scandir(getcwd());
	$filterFn = function($item) {
		return !is_file($item) && $item !== '.';
	};
	$directorios = array_values(array_filter($directorios, $filterFn));
	for ($i = 0; $i < count($directorios); $i++) {
		echo "\n" . $i . ". " . $directorios[$i];
	}
	echo "\n\n";
	$directorio = ask("Navegar (ENTER para seleccionar actual)", "");
	if (strlen($directorio) === 0) {
		return getcwd();
	} else {
		return navegar($directorios[$directorio]);
	}
}

/** Retrocede un directorio y busca transversalmente */
/*function buscarDirectorio($arrSearch) {
	if (strpos(getcwd(), 'vendor') !== false) {
		chdir('../..');
	}
	chdir('..');
	$locations = scandir(getcwd());
	$filterFn = function($item) {
		return !is_file($item) && !in_array(needle, haystack);
	};
	$filteredLocations = array_values(array_filter($locations, $filterFn));
	return transverse($filteredLocations);
}

transverse($array) {
	for (i = 0; $i < count($pivot); $i++) { 
		if () {

		}
	}
}*/

function replace_string_in_file($filename, $string_to_replace, $replace_with){
	$content=file_get_contents($filename);
	$content_chunks=explode($string_to_replace, $content);
	$content=implode($replace_with, $content_chunks);
	file_put_contents($filename, $content);
}
function actualizoRutas($pathBack, $tabla){
	$directorio = $pathBack.'src/routes.php';
	$f = fopen($directorio, "r+");
	$original = file_get_contents($directorio);
	$agregaHojeador = "\r \n \t\$app->get('/".$tabla."', '".$tabla.":hojeador');";
	$agregaABM = "\r \n \t\$app->post('/".$tabla."', '".$tabla.":guardar');";
	$agregaABMDel = "\r \n \t\$app->post('/".$tabla."/eliminar/', '".$tabla.":eliminar');";
	$lineaHojeador = "\$app->group('/hojeador', function () use (\$app) {";
	$lineaAbm = "\$app->group('/abm', function () use (\$app) {";
	$patronH = preg_quote($agregaHojeador, '/');
	$patronH= "/^.*$patronH.*\$/m";
	if (!preg_match_all($patronH, $original, $matches)) {
		while (($buffer = fgets($f)) !== false) {
			if (strpos($buffer, $lineaHojeador) !== false) {
				$pos = ftell($f); 
				$newstr = substr_replace($original, $agregaHojeador, $pos, 0);
				file_put_contents($directorio, $newstr);
				break;
			}
		}
	}
	fclose($f);
	$f = fopen($directorio, "r+");
	$patronA = preg_quote($agregaABM, '/');
	$patronA = "/^.*$patronA.*\$/m";
	if (!preg_match_all($patronA, $original, $matches)) {
		while (($buffer = fgets($f)) !== false) {
			if (strpos($buffer, $lineaAbm) !== false) {
				$pos = ftell($f); 
				$newstr = substr_replace($original, $agregaABM, $pos, 0);
				file_put_contents($directorio, $newstr);
				break;
			}
		}
	}
	fclose($f);
	$f = fopen($directorio, "r+");
	$patronE = preg_quote($agregaABMDel, '/');
	$patronE = "/^.*$patronE.*\$/m";
	if (!preg_match_all($patronE, $original, $matches)){
		while (($buffer = fgets($f)) !== false) {
			if (strpos($buffer, $lineaAbm) !== false) {
				$pos = ftell($f); 
				$newstr = substr_replace($original, $agregaABMDel, $pos, 0);
				file_put_contents($directorio, $newstr);
				break;
			}
		}
	}
	fclose($f);
}

function actualizoDependencias($pathBack, $tabla){
	$directorio = $pathBack.'src/dependencies.php';
	$laTabla = ucfirst($tabla);
	$dependencia_nueva = "\r \n\$container['$tabla'] = function (\$c) { \r\n\t\$tabla = new App\\$laTabla(\$c['logger']);\r\n\t return \$tabla; };";
	$actual = file_get_contents($directorio);
	$actual .= $dependencia_nueva;
	file_put_contents($directorio, $actual);
}